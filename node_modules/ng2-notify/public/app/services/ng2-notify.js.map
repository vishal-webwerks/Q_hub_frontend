{"version":3,"sources":["app/services/ng2-notify.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,2BAAyB,iBAAiB,CAAC,CAAA;AAC3C,QAAO,yBAAyB,CAAC,CAAA;AACjC,QAAO,uBAAuB,CAAC,CAAA;AAG/B;IAQC;QARD,iBA0CC;QAvCO,WAAM,GAAW,cAAc,CAAC;QAChC,UAAK,GAAW,IAAI,CAAC;QAErB,kBAAa,GAAG,CAAC,cAAc,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QAG/E,IAAI,CAAC,MAAM,GAAG,IAAI,uBAAU,CAAC,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,cAAc,GAAG,QAAQ,EAA9B,CAA8B,CAAC,CAAC,KAAK,EAAE,CAAC;IAClF,CAAC;;IAEM,+BAAI,GAAX,UAAY,IAAY,EAAE,MAAM;QAC/B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACrB,OAAO,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAC;YAC7D,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3C,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,iBAAe,MAAM,CAAC,KAAK,wBAAqB,CAAC,CAAC;YACpF,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACxB,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YACnD,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;SAC/C,CAAC,CAAC;IACJ,CAAC;IAEM,iCAAM,GAAb,UAAc,MAAM;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,kBAAgB,MAAM,CAAC,MAAM,oBAAiB,CAAC,CAAC;QACnF,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAAE,iBAAe,MAAM,CAAC,KAAK,wBAAqB,CAAC,CAAC;QACrF,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,cAAc,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;IACzC,CAAC;IA1CF;QAAC,iBAAU,EAAE;;wBAAA;IA2Cb,uBAAC;AAAD,CA1CA,AA0CC,IAAA;AA1CY,wBAAgB,mBA0C5B,CAAA","file":"app/services/ng2-notify.js","sourcesContent":["import {Injectable} from 'angular2/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class Ng2NotifyService {\n\tpublic notify: Observable<Object>;\n\tpublic notifyObserver: any;\n\tpublic corner: string = 'right-bottom';\n\tpublic delay: number = 2000;\n\n\tpublic positionTypes = ['right-bottom', 'left-bottom', 'left-top', 'right-top'];\n\n\tconstructor() {\n\t\tthis.notify = new Observable(observer => this.notifyObserver = observer).share();\n\t};\n\n\tpublic show(type: string, config) {\n\t\tif (!config.message) {\n\t\t\tconsole.error('ng2NotifyError: You must to set a message!!');\n\t\t\treturn false;\n\t\t}\n\n\t\tif (config.delay && !Number(config.delay)) {\n\t\t\tconsole.error('ng2NotifyError: ', `The delay \\\"${config.delay}\\\" must be a number`);\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.notifyObserver.next({\n\t\t\ttype: type,\n\t\t\tmessage: config.message,\n\t\t\tcorner: config.corner ? config.corner : this.corner,\n\t\t\tdelay: config.delay ? config.delay : this.delay\n\t\t});\n\t}\n\n\tpublic config(config) {\n\t\tif (this.positionTypes.indexOf(config.corner) === -1) {\n\t\t\tconsole.error('ng2NotifyError: ', `The corner \\\"${config.corner}\\\" do not exist`);\n\t\t}\n\n\t\tif (!Number(config.delay)) {\n\t\t\tconsole.error('ng2NotifyError: ', `The delay \\\"${config.delay}\\\" must be a number`);\n\t\t}\n\t\tthis.corner = config.corner || 'right-bottom';\n\t\tthis.delay = config.delay || this.delay;\n\t}\n}"],"sourceRoot":"/Users/dimaslz/Documents/vagrant/lemp/www/sites/github/ng2-notify/src"}