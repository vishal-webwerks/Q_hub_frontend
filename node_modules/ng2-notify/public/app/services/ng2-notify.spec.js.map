{"version":3,"sources":["app/services/ng2-notify.spec.ts"],"names":[],"mappings":";AAEA,wBASO,kBAAkB,CAAC,CAAA;AAE1B,2BAA+B,wBAAwB,CAAC,CAAA;AACxD,2BAAyB,iBAAiB,CAAC,CAAA;AAE3C,kBAAQ,CAAC,kBAAkB,EAAE;IAC5B,IAAI,aAAa,GAAqB,IAAI,6BAAgB,EAAE,CAAC;IAE7D,oBAAU,CAAC;QACV,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,yCAAyC,EAAE;QAC7C,gBAAM,CAAC,aAAa,CAAC,MAAM,YAAY,uBAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,gDAAgD,EAAE;QACpD,gBAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,gCAAgC,EAAE;QACpC,gBAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,4FAA4F,EAAE;QAChG,gBAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5D,gBAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3D,gBAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,gBAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,wEAAwE,EAAE;QAC5E,IAAI,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAE7C,gBAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;QACvB,gBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,6CAA6C,CAAC,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,gFAAgF,EAAE;QACpF,IAAI,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE;YACxC,OAAO,EAAE,MAAM;YACf,KAAK,EAAE,SAAS;SAChB,CAAC,CAAC;QAEH,gBAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;QACvB,gBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,wCAAsC,CAAC,CAAC;IACxG,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,2CAA2C,EAAE;QAC/C,aAAa,CAAC,MAAM,CAAC;YACpB,MAAM,EAAE,cAAc;YACtB,KAAK,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,gBAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAClD,gBAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,+DAA+D,EAAE;QACnE,aAAa,CAAC,MAAM,CAAC;YACpB,MAAM,EAAE,cAAc;YACtB,KAAK,EAAE,IAAI;SACX,CAAC,CAAC;QAEH,gBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,wCAAwC,CAAC,CAAC;IAC1G,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,+DAA+D,EAAE;QACnE,aAAa,CAAC,MAAM,CAAC;YACpB,MAAM,EAAE,cAAc;YACtB,KAAK,EAAE,UAAU;SACjB,CAAC,CAAC;QAEH,gBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,uCAAuC,CAAC,CAAC;IACzG,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,sEAAsE,EAAE;QAC1E,aAAa,CAAC,MAAM,CAAC;YACpB,MAAM,EAAE,cAAc;YACtB,KAAK,EAAE,UAAU;SACjB,CAAC,CAAC;QAEH,gBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,uCAAuC,CAAC,CAAC;QACxG,gBAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,wCAAwC,CAAC,CAAC;IAC1G,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","file":"app/services/ng2-notify.spec.js","sourcesContent":["/// <reference path=\"../../../typings/browser.d.ts\" />\n\nimport {\ndescribe,\nexpect,\nbeforeEach,\nit,\ninject,\ninjectAsync,\nbeforeEachProviders,\nTestComponentBuilder\n} from 'angular2/testing';\nimport {ElementRef} from 'angular2/core';\nimport {Ng2NotifyService} from '../services/ng2-notify';\nimport {Observable} from 'rxjs/Observable';\n\ndescribe('Ng2NotifyService', () => {\n\tlet notifyService: Ng2NotifyService = new Ng2NotifyService();\n\n\tbeforeEach(() => {\n\t\tspyOn(console, 'error');\n\t});\n\n\tit('\"notify\" var is Observable<object> type', () => {\n\t\texpect(notifyService.notify instanceof Observable).toBe(true);\n\t});\n\n\tit('default corner string should be \"right-bottom\"', () => {\n\t\texpect(notifyService.corner).toBe('right-bottom');\n\t});\n\n\tit('default delay should be 2000ms', () => {\n\t\texpect(notifyService.delay).toBe(2000);\n\t});\n\n\tit('default delay should be \"[\\'right-bottom\\', \\'left-bottom\\', \\'left-top\\', \\'right-top\\']\"', () => {\n\t\texpect(notifyService.positionTypes[0]).toBe('right-bottom');\n\t\texpect(notifyService.positionTypes[1]).toBe('left-bottom');\n\t\texpect(notifyService.positionTypes[2]).toBe('left-top');\n\t\texpect(notifyService.positionTypes[3]).toBe('right-top');\n\t});\n\n\tit('show new notification without message. Should report a console.error()', function() {\n\t\tlet show = notifyService.show('default', {});\n\n\t\texpect(show).toBeFalsy;\n\t\texpect(console.error).toHaveBeenCalledWith('ng2NotifyError: You must to set a message!!');\n\t});\n\n\tit('show new notification with delay like string.  Should report a console.error()', function() {\n\t\tlet show = notifyService.show('default', {\n\t\t\tmessage: 'text',\n\t\t\tdelay: 'seconds'\n\t\t});\n\n\t\texpect(show).toBeFalsy;\n\t\texpect(console.error).toHaveBeenCalledWith('ng2NotifyError: ', `The delay \"seconds\" must be a number`);\n\t});\n\n\tit('set notification config. Add default vars', function() {\n\t\tnotifyService.config({\n\t\t\tcorner: 'right-bottom',\n\t\t\tdelay: 2000\n\t\t});\n\n\t\texpect(notifyService.corner).toBe('right-bottom');\n\t\texpect(notifyService.delay).toBe(2000);\n\t});\n\n\tit('if set config with not exist corner, return a console.error()', function() {\n\t\tnotifyService.config({\n\t\t\tcorner: 'wrong-corner',\n\t\t\tdelay: 2000\n\t\t});\n\n\t\texpect(console.error).toHaveBeenCalledWith('ng2NotifyError: ', 'The corner \"wrong-corner\" do not exist');\n\t});\n\n\tit('if set config with not string delay, return a console.error()', function() {\n\t\tnotifyService.config({\n\t\t\tcorner: 'right-bottom',\n\t\t\tdelay: '2seconds'\n\t\t});\n\n\t\texpect(console.error).toHaveBeenCalledWith('ng2NotifyError: ', 'The delay \"2seconds\" must be a number');\n\t});\n\n\tit('if set config with corner and delay, should return 2 console.error()', function() {\n\t\tnotifyService.config({\n\t\t\tcorner: 'wrong-corner',\n\t\t\tdelay: '2seconds'\n\t\t});\n\n\t\texpect(console.error).toHaveBeenCalledWith('ng2NotifyError: ', 'The delay \"2seconds\" must be a number');\n\t\texpect(console.error).toHaveBeenCalledWith('ng2NotifyError: ', 'The corner \"wrong-corner\" do not exist');\n\t});\n});\n"],"sourceRoot":"/Users/dimaslz/Documents/vagrant/lemp/www/sites/github/ng2-notify/src"}